const { Scenes } = require('telegraf');
const { backMenu } = require('./commands');
const { getWeatherLocationCoord } = require('../services/getWeatherLocation');
const { backButtonMenuAndLocation } = require('../utils/buttons');
const { CMD_TEXT } = require('../config/consts');
const { createImageChartWeather } = require('../services/weatherChart');
const { definitionAverageWeatherHours } = require('../utils/average');

// –ø–µ—Ä–µ–¥–∞—ë–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—É –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã –∏ —à–∞–≥–∏ —Å—Ü–µ–Ω
const whatWeatherScene = new Scenes.BaseScene('weather');

// –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ —Å—Ü–µ–Ω—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
whatWeatherScene.enter(ctx => ctx.reply('‚ú® –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é', {
    ...backButtonMenuAndLocation
}));

// —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å–ª—É—à–∫–∏ –Ω–∞ –º–µ—Ç–æ–¥ location tg
whatWeatherScene.on('location', async ctx => {
    try {
        const msg = ctx.message;
        if (!msg.location) return ctx.reply('–≠—Ç–æ –Ω–µ –≥–µ–æ–ø–æ–∑–∏—Ü–∏—è!')
        ctx.reply('üí´ –ò—â—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–≥–æ–¥—É');

        // –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ 
        const {
            latitude,
            longitude
        } = msg.location;

        // –ø–æ–ª—É—á–∞–µ–º –Ω–∞—à—É –ø–æ–≥–æ–¥—É –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
        const data = await getWeatherLocationCoord({ latitude, longitude });

        // –ø–æ–ª—É—á–∞–µ–º –Ω–∞—à–∏ –ø–µ—Ä–µ–±—Ä–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
        const averageTemp = await definitionAverageWeatherHours({
            time: data.hourly.time,
            temp: data.hourly.temperature_2m
        })

        // –ø—Ä–∏—Ö–æ–¥–∏—Ç –±—É—Ñ—Ñ–µ—Ä - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞ –ø–æ–≥–æ–¥—ã
        const file = await createImageChartWeather({
            label: '–°–≤–æ–¥–∫–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ –Ω–µ–¥–µ–ª—é',
            time: averageTemp.days,
            temp: averageTemp.tempDays
        });
        // ctx.reply(`–°–µ–π—á–∞—Å —É —Ç–µ–±—è ${data.current_weather.temperature}${data.hourly_units.temperature_2m}\n–í–µ—Ç–µ—Ä ${data.current_weather.windspeed} ${data.hourly_units.windspeed_10m}`)
        // –æ—Ç–≤–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ –ø–æ–≥–æ–¥–µ
        ctx.replyWithPhoto({
            source: file,
        }, {
            caption: `–°–µ–π—á–∞—Å —É —Ç–µ–±—è ${data.current_weather.temperature}${data.hourly_units.temperature_2m}\n–í–µ—Ç–µ—Ä ${data.current_weather.windspeed} ${data.hourly_units.windspeed_10m}`
        });
    } catch (error) {
        console.log(error)
        ctx.reply('–£–ø—Å... –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è - —Ç–æ –æ—à–∏–±–∫–∞');
    }
})

// –≤–µ—à–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –ø—Ä–æ—Å–ª—É—à–∫—É hears –Ω–∞ —Å—Ü–µ–Ω—É
whatWeatherScene.hears(CMD_TEXT.menu, ctx => {
    // –≤—ã—Ö–æ–¥–∏–º —Å–æ —Å—Ü–µ–Ω—ã
    ctx.scene.leave();
    return backMenu(ctx);
})

// —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω—É
module.exports = {
    whatWeatherScene
};
