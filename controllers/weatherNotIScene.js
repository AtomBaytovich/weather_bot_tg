const { Telegraf, Scenes } = require('telegraf');
const { CMD_TEXT } = require('../config/consts');
const { backMenu } = require('../controllers/commands');
const {
    geocoderLocation,
    getWeatherLocationCoord
} = require('../services/getWeatherLocation');
const {
    backButtonMenu,
    mainMenu
} = require('../utils/buttons');
const { guessTemperature } = require('../utils/guessTemperature');

// –ø–µ—Ä–≤—ã–π —à–∞–≥ —Å—Ü–µ–Ω—ã
const stepOne = Telegraf.on('text', async ctx => {
    try {
        const msg = ctx.message;
        // console.log(msg)
        const numberText = msg.text
        if (!Number(numberText) || numberText < -60 || numberText > 60) return ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–≤—Ç–æ—Ä–∏ —Å –¥—Ä—É–≥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º');
        
        ctx.reply('‚ô®Ô∏è –°–ø–∞—Å–∏–±–æ. –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Ç—ã –ø—Ä–∞–≤.\n‚úèÔ∏è –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –∞–¥—Ä–µ—Å')
        // —É–∫–∞–∑—ã–≤–∞–µ–º state –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ —Å—Ü–µ–Ω—ã
        ctx.scene.state.guessTemperature = numberText;
        // –≥–æ–≤–æ—Ä–∏–º, —á—Ç–æ–±—ã –ø–µ—Ä–µ—à—ë–ª –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
        ctx.wizard.next();
    } catch (error) {
        console.log(error)
        ctx.reply('–£–ø—Å... –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è - —Ç–æ –æ—à–∏–±–∫–∞');
    }
});

// –≤—Ç–æ—Ä–æ–π —à–∞–≥ —Å—Ü–µ–Ω—ã
const stepTwo = Telegraf.on('text', async ctx => {
    try {
        const msg = ctx.message;
        // console.log(msg)

        const location = await geocoderLocation(msg.text);
        if (!location) return ctx.reply('–£–ø—Å... –Ø –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–≥–æ –º–µ—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ!')
        // console.log(location[0])

        const data = await getWeatherLocationCoord({
            latitude: location[0].lat,
            longitude: location[0].lon
        });
        // –æ—Ç–≤–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ –ø–æ–≥–æ–¥–µ
        ctx.reply(`–°–µ–π—á–∞—Å —Ç–∞–º ${data.current_weather.temperature}${data.hourly_units.temperature_2m}\n–í–µ—Ç–µ—Ä ${data.current_weather.windspeed} ${data.hourly_units.windspeed_10m}`, {
            ...mainMenu
        })
        // –æ—Ç–≤–µ—á–∞–µ–º —Ä–∞–∑–Ω–∏—Ü–µ–π –≤ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ
        ctx.reply(`üéÆ ${guessTemperature(ctx.scene.state.guessTemperature, data.current_weather.temperature)}`)
        // –≤—ã—Ö–æ–¥–∏–º —Å–æ —Å—Ü–µ–Ω—ã
        ctx.scene.leave();
    } catch (error) {
        console.log(error)
        ctx.reply('–£–ø—Å... –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è - —Ç–æ –æ—à–∏–±–∫–∞');
    }
});

// –ø–µ—Ä–µ–¥–∞—ë–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—É –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã –∏ —à–∞–≥–∏ —Å—Ü–µ–Ω
const whatWeatherNotIScene = new Scenes.WizardScene('weatherNotI', stepOne, stepTwo)

whatWeatherNotIScene.enter(ctx => ctx.reply('‚ùì –î–ª—è –Ω–∞—á–∞–ª–∞ –æ—Ç–≥–∞–¥–∞–π —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –≥—Ä–∞–¥—É—Å–æ–≤ –±—É–¥–µ—Ç?\n‚úèÔ∏è –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç -60 –¥–æ 60', {
    ...backButtonMenu
}));

// –≤–µ—à–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∫—É hears –Ω–∞ —Å—Ü–µ–Ω—É
whatWeatherNotIScene.hears(CMD_TEXT.menu, ctx => {
    ctx.scene.leave();
    return backMenu(ctx);
})

// —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ü–µ–Ω—É
module.exports = {
    whatWeatherNotIScene
}; 